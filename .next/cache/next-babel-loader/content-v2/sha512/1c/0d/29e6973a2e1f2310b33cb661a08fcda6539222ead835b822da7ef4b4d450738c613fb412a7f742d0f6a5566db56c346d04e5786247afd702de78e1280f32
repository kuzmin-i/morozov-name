{"ast":null,"code":"import _defineProperty from \"/Users/ikuzmin/Documents/morozov-name/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/ikuzmin/Documents/morozov-name/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ikuzmin/Documents/morozov-name/pages/three-model.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport Model from '../components/model';\n\nvar Buildings = function Buildings() {\n  _s();\n\n  var mesh = useRef();\n\n  var _useLoader = useLoader(GLTFLoader, 'models/1.glb'),\n      _useLoader2 = _slicedToArray(_useLoader, 1),\n      gltf = _useLoader2[0];\n\n  useEffect(function () {\n    if (gltf) {\n      mesh.current = new THREE.AnimationMixer(gltf.scene);\n      console.log(gltf.scene);\n    }\n  }, [gltf]);\n  return gltf ? /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }, _this) : null;\n};\n\n_s(Buildings, \"DCd9g5umZUYRT0PVuAtU0MQreiA=\", false, function () {\n  return [useLoader];\n});\n\n_c = Buildings;\n\nfunction Box(props) {\n  _s2();\n\n  // This reference will give us direct access to the mesh\n  var mesh = useRef();\n  console.log(mesh); // Set up state for the hovered and active state\n\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHover = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: function onClick(event) {\n      return setActive(!active);\n    },\n    onPointerOver: function onPointerOver(event) {\n      return setHover(true);\n    },\n    onPointerOut: function onPointerOut(event) {\n      return setHover(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Box, \"v0EuvcREQIe0Cs/KpFD8GfN5Pcw=\");\n\n_c2 = Box;\n\nvar ThreeRender = function ThreeRender() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(Buildings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        position: [-1.2, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        position: [1.2, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, _this);\n};\n\n_c3 = ThreeRender;\nexport default ThreeRender;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Buildings\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"ThreeRender\");","map":{"version":3,"sources":["/Users/ikuzmin/Documents/morozov-name/pages/three-model.js"],"names":["React","useRef","useState","useEffect","Canvas","useFrame","useLoader","GLTFLoader","Model","Buildings","mesh","gltf","current","THREE","AnimationMixer","scene","console","log","Box","props","hovered","setHover","active","setActive","event","ThreeRender","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\n\n\nimport Model from '../components/model'\n\nconst Buildings = () => {\n  const mesh = useRef()\n\n  const [gltf] = useLoader(GLTFLoader, 'models/1.glb')\n\n  useEffect(() => {\n    if(gltf) {\n      mesh.current = new THREE.AnimationMixer(gltf.scene)\n\n      console.log(gltf.scene)\n    }\n  }, [gltf])\n\n  return gltf ? <primitive object = { gltf.scene } /> : null\n\n}\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n  console.log(mesh)\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  \n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxBufferGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nconst ThreeRender = () => {\n\n    return (\n        <div style={{width: '100vw', height: '100vh'}}>\n            <Model/>\n            <Canvas>\n                <Buildings/>\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <Box position={[-1.2, 0, 0]} />\n                <Box position={[1.2, 0, 0]} />\n            </Canvas>\n        </div>\n    )\n}\n\nexport default ThreeRender"]},"metadata":{},"sourceType":"module"}