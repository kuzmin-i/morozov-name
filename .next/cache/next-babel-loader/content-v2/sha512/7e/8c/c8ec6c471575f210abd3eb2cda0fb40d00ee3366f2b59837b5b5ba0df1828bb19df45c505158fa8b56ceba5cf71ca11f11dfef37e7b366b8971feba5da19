{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ikuzmin/Documents/morozov-name/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/ikuzmin/Documents/morozov-name/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ikuzmin/Documents/morozov-name/pages/three-model.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, Suspense } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from 'react-three-fiber';\nimport * as THREE from \"three\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { useEffect } from 'react';\nimport { PerspectiveCamera } from 'three';\n\nfunction Building(props) {\n  _s();\n\n  var mesh1 = useRef();\n  var gltf = useLoader(GLTFLoader, props.model);\n  gltf.scene.traverse(function (object) {\n    if (object.isMesh) {\n      object.material.color.set(0xff0000);\n      object.material.transparent = true;\n      object.material.opacity = .5;\n    }\n  });\n\n  var changeColor = function changeColor(e, status) {\n    if (props.pointer) {\n      mesh1.current.traverse(function (object) {\n        if (object.isMesh) {\n          if (status) {\n            object.material.color.set(0xF8C135);\n            object.material.transparent = true;\n            object.material.opacity = .8;\n          } else {\n            object.material.color.set(0xff0000);\n            object.material.transparent = true;\n            object.material.opacity = .5;\n          }\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"primitive\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: mesh1,\n    object: gltf.scene,\n    onPointerOver: function onPointerOver(e) {\n      changeColor(mesh1, true);\n    },\n    onPointerOut: function onPointerOut(e) {\n      changeColor(mesh1, false);\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Building, \"qYkskQs7SYn71uQq/XO9FWNLweA=\", false, function () {\n  return [useLoader];\n});\n\n_c = Building;\n\nfunction Landscape(props) {\n  _s2();\n\n  var mesh = useRef();\n  var gltf = useLoader(GLTFLoader, props.model);\n  var clock = useRef(new THREE.Clock());\n  var mixer = useRef();\n  useEffect(function () {\n    mixer.current = new THREE.AnimationMixer(gltf.scene);\n    var action = mixer.current.clipAction(gltf.animations[0]);\n    action.play();\n  });\n  /* useFrame(state => {\n    if(mixer.current) {\n      const delta = clock.current.getDelta()\n      mixer.current.update\n    }\n  })\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"primitive\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: mesh,\n    object: gltf.scene\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Landscape, \"mt0ni9DUVgKnv+Z69gbh23rnk8w=\", false, function () {\n  return [useLoader];\n});\n\n_c2 = Landscape;\n\nfunction Box(props) {\n  _s3();\n\n  // This reference will give us direct access to the mesh\n  var mesh = useRef(); // Set up state for the hovered and active state\n\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHover = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1]; // Rotate mesh every frame, this is outside of React without overhead\n\n\n  useFrame(function () {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: function onClick(event) {\n      return setActive(!active);\n    },\n    onPointerOver: function onPointerOver(event) {\n      return setHover(true);\n    },\n    onPointerOut: function onPointerOut(event) {\n      return setHover(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Box, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n  return [useFrame];\n});\n\n_c3 = Box;\n\nfunction Camera(props) {\n  _s4();\n\n  var position = props.position,\n      rotation = props.rotation,\n      other = _objectWithoutProperties(props, [\"position\", \"rotation\"]);\n\n  if (!position) {\n    position = [166.206, 187.230, 120.114];\n  }\n\n  if (!rotation) {\n    rotation = [-57.32 * Math.PI / 180, 36.77 * Math.PI / 180, 43.01 * Math.PI / 180];\n  }\n\n  var _props = {\n    position: position,\n    rotation: rotation\n  };\n  var cameraRef = useRef();\n\n  var _useThree = useThree(),\n      setDefaultCamera = _useThree.setDefaultCamera;\n\n  useEffect(function () {\n    return void setDefaultCamera(cameraRef.current);\n  }, []);\n  useFrame(function () {\n    return cameraRef.current.updateMatrixWorld();\n  });\n  return /*#__PURE__*/_jsxDEV(\"perspectiveCamera\", _objectSpread({\n    ref: cameraRef\n  }, _props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n}\n\n_s4(Camera, \"ff+UBx33Yml2XTNJ6tTeRqPxRtw=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c4 = Camera;\n\nvar ThreeRender = function ThreeRender(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(Camera, {\n        position: props.position,\n        rotation: props.rotation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10],\n        intensity: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        position: [-1.2, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        position: [1.2, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/1.glb\",\n          pointer: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/2.glb\",\n          pointer: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/3.glb\",\n          pointer: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/4.glb\",\n          pointer: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/5.glb\",\n          pointer: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Building, {\n          model: \"models/gltf/6.glb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }, _this), /*#__PURE__*/_jsxDEV(Landscape, {\n          model: \"models/gltf/monkey_1.glb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, _this);\n};\n\n_c5 = ThreeRender;\nexport default ThreeRender;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Building\");\n$RefreshReg$(_c2, \"Landscape\");\n$RefreshReg$(_c3, \"Box\");\n$RefreshReg$(_c4, \"Camera\");\n$RefreshReg$(_c5, \"ThreeRender\");","map":{"version":3,"sources":["/Users/ikuzmin/Documents/morozov-name/pages/three-model.js"],"names":["React","useRef","useState","Suspense","Canvas","useFrame","useLoader","useThree","THREE","GLTFLoader","useEffect","PerspectiveCamera","Building","props","mesh1","gltf","model","scene","traverse","object","isMesh","material","color","set","transparent","opacity","changeColor","e","status","pointer","current","Landscape","mesh","clock","Clock","mixer","AnimationMixer","action","clipAction","animations","play","Box","hovered","setHover","active","setActive","rotation","x","y","event","Camera","position","other","Math","PI","_props","cameraRef","setDefaultCamera","updateMatrixWorld","ThreeRender","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useState, Suspense } from 'react'\nimport { Canvas, useFrame, useLoader, useThree } from 'react-three-fiber'\n\nimport * as THREE from \"three\";\n\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { useEffect } from 'react';\nimport { PerspectiveCamera } from 'three';\n\nfunction Building(props) {\n  \n  \n  const mesh1 = useRef()\n  const gltf = useLoader(GLTFLoader, props.model)\n\n  gltf.scene.traverse( function(object) {\n\n    if( object.isMesh ) {\n      object.material.color.set( 0xff0000 );\n      object.material.transparent = true;\n      object.material.opacity = .5;\n    }\n\n  })\n  \n  const changeColor = (e, status) => {\n    if(props.pointer) {\n      mesh1.current.traverse( function(object) {\n\n        if( object.isMesh ) {\n          if(status) {\n            object.material.color.set( 0xF8C135 );\n            object.material.transparent = true;\n            object.material.opacity = .8;\n          } else {\n            object.material.color.set( 0xff0000 );\n            object.material.transparent = true;\n            object.material.opacity = .5;\n          }\n        }\n    \n      })\n    }\n  }\n\n  return (\n      <primitive\n        {...props}\n        ref={mesh1}\n        object = {gltf.scene}\n        onPointerOver = {(e) => { changeColor(mesh1, true) }}\n        onPointerOut = {(e) => { changeColor(mesh1, false) }}\n        />\n      \n  )\n}\n\nfunction Landscape(props) {\n\n  const mesh = useRef()\n  const gltf = useLoader(GLTFLoader, props.model)\n\n  const clock = useRef(new THREE.Clock())\n  const mixer = useRef()\n\n  useEffect(() => {\n    mixer.current = new THREE.AnimationMixer(gltf.scene)\n    const action = mixer.current.clipAction( gltf.animations[0] )\n\n    action.play()\n  })\n\n  /* useFrame(state => {\n    if(mixer.current) {\n      const delta = clock.current.getDelta()\n      mixer.current.update\n    }\n  })\n  */\n\n  return (\n    <primitive\n      {...props}\n      ref={mesh}\n      object = {gltf.scene}\n    />\n    \n)\n\n}\n\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxBufferGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nfunction Camera(props) {\n   \n  \n\n  let {position, rotation, ...other} = props\n\n  if(!position) {\n    position = [166.206, 187.230, 120.114]\n  }\n\n  if(!rotation) {\n    rotation = [-57.32 * Math.PI / 180, 36.77 * Math.PI / 180, 43.01 * Math.PI / 180]\n  }\n\n  let _props = {position, rotation}\n\n  const cameraRef = useRef()\n  const { setDefaultCamera } = useThree()\n  useEffect(() => void setDefaultCamera(cameraRef.current), [])\n  useFrame(() => cameraRef.current.updateMatrixWorld())\n  return <perspectiveCamera ref={cameraRef} {..._props} />\n}\n\nconst ThreeRender = (props) => {\n\n  \n\n    return (\n        <div style={{width: '100vw', height: '100vh'}}>\n            <Canvas>\n                <Camera\n                  position = { props.position }\n                  rotation = { props.rotation }\n                />\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} intensity = {7} />\n                <Box position={[-1.2, 0, 0]} />\n                <Box position={[1.2, 0, 0]} />\n                <Suspense fallback = {null}>\n                  <Building model = 'models/gltf/1.glb' pointer = 'true'/>\n                  <Building model = 'models/gltf/2.glb' pointer = 'true'/>\n                  <Building model = 'models/gltf/3.glb' pointer = 'true'/>\n                  <Building model = 'models/gltf/4.glb' pointer = 'true'/>\n                  <Building model = 'models/gltf/5.glb' pointer = 'true'/>\n                  <Building model = 'models/gltf/6.glb'/>\n                  <Landscape model = 'models/gltf/monkey_1.glb'/>\n                </Suspense>\n            </Canvas>\n        </div>\n    )\n}\n\nexport default ThreeRender"]},"metadata":{},"sourceType":"module"}